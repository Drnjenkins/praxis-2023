*.zip
*.swp
*_reprocessed/
2015/
data/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
01-Download-MAUDE-Data/
02-Process-2015-Data/
03-Review-and-Reprocess-2015-Data/
04-Process-2020-Data/
04-Process-2021-Data/
05-Pivot-tables-for-devices-and-defects/
06-Clean-2020-Data/
06-Clean-2021-Data/
09-Data-Stratification/
09-data_stratification/
10-Text-Classification-For-Component-Failures/
11-Text-Classification-For-Replacements/
12-PCA-Clustering-v1/
13-PCA-Clustering-v2/
14-PCA-Clustering-v3/
15-Combine-2020-2021-Stratified-Data/
15-data_combination/
16-Preprocess-Combined-Data/
16-data_preprocessing/
17-PCA-Lemmatized-Sentences/
17-pca-lemmatized/
18-PCA-Stemmed-Sentences/
18-pca-stemmed/
2020_clean/
2021_clean/
21-Preprocess-Combined-Data-v2/
21-data_preprocessing/
21-data_preprocessing/
22-PCA-Lemmatized-Sentences-v2/
22-pca-lemmatized/
22-pca-lemmatized/
23-PCA-Stemmed-Sentences-v2/
23-pca-stemmed/
24-PCA-Raw-Text/
24-pca-raw-text/
25-PCA/
26-NMF/
26-tSNE/
27-NMF-v2/
27-PCA-with-tSNE/
28-LDA/
29-tSNE/
30-NMF-v2/
30-PCA-with-tSNE/
31-NMF-with-Sentences/
32-LDA-with-Sentences/
33-PCA-Revised/
33-PCA-tsne-KMeans-DBSCAN/
34-tsne-KMeans-DBSCAN-MacBook/
NLTK_PACKAGES/
data_stratification/
index.html
labeled_data/
pca_clustering/
text_classification/
36-Determine-Primary-Labels/
